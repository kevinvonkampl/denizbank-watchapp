# ===================================================================
# SERVER CONFIGURATION
# ===================================================================
server:
  port: 8080 # Uygulamanın çalışacağı port

# ===================================================================
# SPRING BOOT CORE CONFIGURATION
# ===================================================================
spring:
  # 'dev' profili, geliştirme ortamı için ayarları içerir.
  profiles:
    active: dev
  application:
    name: "watchapp"

  # ===================================================================
  # DATABASE & JPA CONFIGURATION (AivenDB)
  # ===================================================================
  datasource:
    # URL, kullanıcı adı ve şifre gibi hassas bilgiler ortam değişkenlerinden (environment variables) okunur.
    # Bu, kodun güvenliğini artırır.
    url: jdbc:postgresql://${AIVEN_DB_HOST}:${AIVEN_DB_PORT}/${AIVEN_DB_NAME}?sslmode=require
    username: ${AIVEN_DB_USERNAME}
    password: ${AIVEN_DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update # Geliştirme sırasında DB şemasını kodla senkronize tutar.
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect # PostgreSQL için doğru lehçe.
        format_sql: true # SQL loglarını daha okunaklı yapar.
    show-sql: true # Çalışan SQL sorgularını konsolda gösterir.

# ===================================================================
# CUSTOM APPLICATION SPECIFIC CONFIGURATION
# ===================================================================
app:
  # Basit API anahtarı ile güvenlik. Saat uygulaması bu anahtarı her istekte göndermeli.
  security:
    api-key: "8ea408e3-8094-4006-aaa7-4c78dfb69508"

  # Open Bank Project API ayarları.
  obp:
    api:
      base-url: "https://apisandbox.openbankproject.com"
      consumer-key: ${OBP_CONSUMER_KEY}
      consumer-secret: ${OBP_CONSUMER_SECRET}
      # OBP sandbox'a giriş için kullanılacak test kullanıcısı bilgileri.
      test-user:
        username: ${OBP_TEST_USERNAME}
        password: ${OBP_TEST_PASSWORD}

  # Harici finansal veri sağlayıcısının (Alpha Vantage) ayarları.
  financial-api:
    alphavantage:
      api-key: ${ALPHAVANTAGE_API_KEY} # Alpha Vantage'dan alınan ücretsiz API anahtarı.
      base-url: "https://www.alphavantage.co"

  # Twilio SMS servisi için ayarlar.
  twilio:
    account-sid: ${TWILIO_ACCOUNT_SID} # Twilio konsolundan alınan SID.
    auth-token: ${TWILIO_AUTH_TOKEN} # Twilio konsolundan alınan Auth Token.
    from-number: ${TWILIO_FROM_NUMBER} # Twilio'dan alınan telefon numarası.

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
logging:
  level:
    root: INFO # Genel log seviyesi.
    # Kendi projemizin paketleri için daha detaylı loglama.
    # Paket adını kendi projeninkine göre değiştirmelisin (örn: com.denizbank.watchapp).
    watchapp: DEBUG
    org.hibernate.SQL: DEBUG # Veritabanı sorgularını gösterir.
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE # Sorgulardaki parametreleri gösterir.