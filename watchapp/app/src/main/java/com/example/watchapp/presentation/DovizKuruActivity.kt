package com.example.watchapp.presentation

import android.app.AlertDialog
import android.os.Bundle
import android.widget.TextView
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.cardview.widget.CardView
import com.example.watchapp.R
import java.text.SimpleDateFormat
import java.util.*

class DovizKuruActivity : ComponentActivity() {
    
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_doviz_kuru)
        
        setupViews()
        setupClickListeners()
        updateTime()
    }
    
    private fun setupViews() {
        // Saat gÃ¼ncellemesi
        updateTime()
    }
    
    private fun setupClickListeners() {
        // Back butonu
        findViewById<TextView>(R.id.tv_back).setOnClickListener {
            finish()
        }
        
        // EUR kartÄ±
        findViewById<CardView>(R.id.card_eur).setOnClickListener {
            showCurrencyDetails("EUR", "Euro", "89,908322", "0,11%", "ðŸ‡ªðŸ‡º", false)
        }
        
        // CNY kartÄ±
        findViewById<CardView>(R.id.card_cny).setOnClickListener {
            showCurrencyDetails("CNY", "Ã‡in YuanÄ±", "13,882171", "0,02%", "ðŸ‡¨ðŸ‡³", true)
        }
        
        // GBP kartÄ±
        findViewById<CardView>(R.id.card_gbp).setOnClickListener {
            showCurrencyDetails("GBP", "Ä°ngiliz Sterlini", "115,548566", "1,73%", "ðŸ‡¬ðŸ‡§", true)
        }
        
        // CAD kartÄ±
        findViewById<CardView>(R.id.card_cad).setOnClickListener {
            showCurrencyDetails("CAD", "Kanada DolarÄ±", "22,1268506", "1,73%", "ðŸ‡¨ðŸ‡¦", true)
        }
    }
    
    private fun updateTime() {
        val timeTextView = findViewById<TextView>(R.id.tv_time)
        val currentTime = SimpleDateFormat("HH:mm", Locale.getDefault()).format(Date())
        timeTextView.text = currentTime
    }
    
    private fun showCurrencyDetails(code: String, name: String, rate: String, change: String, flag: String, isPositive: Boolean) {
        val changeColor = if (isPositive) "YeÅŸil (ArtÄ±ÅŸ)" else "KÄ±rmÄ±zÄ± (DÃ¼ÅŸÃ¼ÅŸ)"
        val currencyInfo = """
            DÃ¶viz: $code - $name
            Kuru: $rate TL
            DeÄŸiÅŸim: $change ($changeColor)
            Bayrak: $flag
            
            Bu dÃ¶viz hakkÄ±nda detaylÄ± bilgi almak ister misiniz?
        """.trimIndent()
        
        AlertDialog.Builder(this)
            .setTitle("$code DÃ¶viz DetaylarÄ±")
            .setMessage(currencyInfo)
            .setPositiveButton("Al") { _, _ ->
                showBuyCurrencyDialog(code, name, rate)
            }
            .setNegativeButton("Sat") { _, _ ->
                showSellCurrencyDialog(code, name, rate)
            }
            .setNeutralButton("Tamam") { dialog, _ ->
                dialog.dismiss()
            }
            .show()
    }
    
    private fun showBuyCurrencyDialog(code: String, name: String, rate: String) {
        AlertDialog.Builder(this)
            .setTitle("DÃ¶viz Al")
            .setMessage("$code ($name) dÃ¶vizini $rate TL kuruyla almak istiyor musunuz?")
            .setPositiveButton("Al") { _, _ ->
                Toast.makeText(this, "$code dÃ¶vizi baÅŸarÄ±yla alÄ±ndÄ±!", Toast.LENGTH_SHORT).show()
            }
            .setNegativeButton("Ä°ptal") { dialog, _ ->
                dialog.dismiss()
            }
            .show()
    }
    
    private fun showSellCurrencyDialog(code: String, name: String, rate: String) {
        AlertDialog.Builder(this)
            .setTitle("DÃ¶viz Sat")
            .setMessage("$code ($name) dÃ¶vizini $rate TL kuruyla satmak istiyor musunuz?")
            .setPositiveButton("Sat") { _, _ ->
                Toast.makeText(this, "$code dÃ¶vizi baÅŸarÄ±yla satÄ±ldÄ±!", Toast.LENGTH_SHORT).show()
            }
            .setNegativeButton("Ä°ptal") { dialog, _ ->
                dialog.dismiss()
            }
            .show()
    }
} 